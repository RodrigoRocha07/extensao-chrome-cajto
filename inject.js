const serieBasePrincipal=[10,50,100,50,80,120,200,180,130,90,50,20];const seriesBase=[serieBasePrincipal,[25,60,40,85,130,240,190,300,170,115,95,100,90,70,75,65,50,120,200,135,145,320,75,55,9],[18,50,35,90,110,220,160,280,150,120,85,95,300,80,70,60,55,140,130,90,160,290,85,65,12],[10,45,25,70,120,250,175,350,180,130,80,90,100,85,65,55,45,100,310,125,130,280,90,60,8]];function converterValorFormatado(valorFormatado){return parseFloat(valorFormatado.replace(/\./g,"").replace(",","."))}function gerarSerieDeVendas(totalVendas){const serie=[];const numSéries=seriesBase.length;const horasDoDia=25;for(let i=0;i<horasDoDia;i++){const serieAleatoria=seriesBase[Math.floor(Math.random()*numSéries)];const valorBase=serieAleatoria[i%serieAleatoria.length];let fator=1;if(i<6){fator=i/6}else if(i<12){fator=1+Math.random()*.5}else if(i===15){fator=2+Math.random()*.5}else if(i>12&&i<18){fator=1.7+Math.random()*.5}else if(i===19||i===20){fator=1.8+Math.random()*.4}else if(i<22){fator=1-(i-18)/4}else{fator=(24-i)/4}const valorAjustado=valorBase*fator;serie.push(valorAjustado)}const somaSerie=serie.reduce((acc,val)=>acc+val,0);const fatorEscala=totalVendas/somaSerie;const serieEscalada=serie.map(valor=>parseFloat((valor*fatorEscala).toFixed(2)));return serieEscalada}function aplicarNovosDadosVendas(grafico,valorTotal,serieVendas=null){if(grafico&&valorTotal>0){let novaSerie;if(serieVendas){novaSerie={name:"Vendas",data:serieVendas}}else{novaSerie={name:"Vendas",data:gerarSerieDeVendas(valorTotal)}}grafico.updateSeries([novaSerie],true)}}function interceptarRenderizacao(){const renderOriginal=ApexCharts.prototype.render;const updateOptionsOriginal=ApexCharts.prototype.updateOptions;ApexCharts.prototype.render=function(){if(this.w&&this.w.config&&this.w.config.series){const valorVendasFormatado=localStorage.getItem("valorVendas");if(valorVendasFormatado){const valorVendas=converterValorFormatado(valorVendasFormatado);const serieVendas=JSON.parse(localStorage.getItem("serieVendas"))||gerarSerieDeVendas(valorVendas);this.w.config.series=[{name:"Vendas",data:serieVendas}]}}return renderOriginal.apply(this,arguments)};ApexCharts.prototype.updateOptions=function(newOptions,...rest){const valorVendasFormatado=localStorage.getItem("valorVendas");if(valorVendasFormatado){const valorVendas=converterValorFormatado(valorVendasFormatado);const serieVendas=JSON.parse(localStorage.getItem("serieVendas"))||gerarSerieDeVendas(valorVendas);if(newOptions&&newOptions.series){newOptions.series=[{name:"Vendas",data:serieVendas}]}}return updateOptionsOriginal.apply(this,[newOptions,...rest])}}function iniciarModificacaoEVerificacao(){interceptarRenderizacao()}iniciarModificacaoEVerificacao();